0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@3.10.3
3 info using node@v6.5.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/Phil/Projects/koa-oauth-server',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/Phil/.npm/koa-oauth-server/2.0.0/package.tgz not in flight; packing
9 verbose correctMkdir /Users/Phil/.npm correctMkdir not in flight; initializing
10 info lifecycle koa-oauth-server@2.0.0~prepublish: koa-oauth-server@2.0.0
11 silly lifecycle koa-oauth-server@2.0.0~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/Users/Phil/.npm/koa-oauth-server/2.0.0/package.tgz',
12 verbose tar pack   '/Users/Phil/Projects/koa-oauth-server' ]
13 verbose tarball /Users/Phil/.npm/koa-oauth-server/2.0.0/package.tgz
14 verbose folder /Users/Phil/Projects/koa-oauth-server
15 verbose addLocalTarball adding from inside cache /Users/Phil/.npm/koa-oauth-server/2.0.0/package.tgz
16 verbose correctMkdir /Users/Phil/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd koa-oauth-server@2.0.0
18 verbose afterAdd /Users/Phil/.npm/koa-oauth-server/2.0.0/package/package.json not in flight; writing
19 verbose correctMkdir /Users/Phil/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /Users/Phil/.npm/koa-oauth-server/2.0.0/package/package.json written
21 silly publish { name: 'koa-oauth-server',
21 silly publish   description: 'OAuth provider for koa',
21 silly publish   version: '2.0.0',
21 silly publish   main: 'index.js',
21 silly publish   scripts:
21 silly publish    { lint: 'jshint .',
21 silly publish      test: 'NODE_ENV=test ./node_modules/.bin/mocha \'test/**/*.js\'' },
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git://github.com/thomseddon/koa-oauth-server.git' },
21 silly publish   keywords: [ 'koa', 'oauth', 'oauth2' ],
21 silly publish   author: { name: 'Thom Seddon', email: 'thom@nightworld.com' },
21 silly publish   license: 'MIT',
21 silly publish   dependencies:
21 silly publish    { co: '^4.5.1',
21 silly publish      'oauth2-server': 'git+ssh://git@github.com/pschwyter/node-oauth2-server.git#enhancement/refactor-project' },
21 silly publish   devDependencies:
21 silly publish    { 'co-mocha': '^1.1.0',
21 silly publish      'co-supertest': '0.0.8',
21 silly publish      jshint: '^2.8.0',
21 silly publish      koa: '^0.14.0',
21 silly publish      'koa-bodyparser': '^1.4.1',
21 silly publish      mocha: '^2.0.1',
21 silly publish      should: '^4.4.1',
21 silly publish      sinon: '^1.14.1',
21 silly publish      supertest: '^0.15.0' },
21 silly publish   engines: { node: '>=0.11' },
21 silly publish   readme: '# Koa OAuth Server [![Build Status](https://travis-ci.org/thomseddon/koa-oauth-server.png?branch=master)](https://travis-ci.org/thomseddon/koa-oauth-server)\n\nComplete, compliant and well tested module for implementing an OAuth2 Server/Provider with [koa](https://github.com/koajs/koa) in [node.js](http://nodejs.org/).\n\nThis is the koa wrapper for [oauth2-server](https://github.com/thomseddon/node-oauth2-server).\n\n## Installation\n\n    $ npm install koa-oauth-server\n\n## Quick Start\n\nThe module provides two middlewares - one for granting tokens and another to authorise them. `koa-oauth-server` and, consequently `oauth2-server`, expect the request body to be parsed already.\nThe following example uses `koa-bodyparser` but you may opt for an alternative library.\n\n```js\nvar koa = require(\'koa\');\nvar bodyparser = require(\'koa-bodyparser\');\nvar oauthserver = require(\'koa-oauth-server\');\n\nvar app = koa();\n\napp.oauth = oauthserver({\n  model: {}, // See https://github.com/thomseddon/node-oauth2-server for specification\n  grants: [\'password\'],\n  debug: true\n});\n\napp.use(bodyparser());\napp.use(app.oauth.authorise());\n\napp.use(function *(next) {\n  this.body = \'Secret area\';\n  yield next;\n});\n\napp.listen(3000);\n```\n\n### Using `koa-router` with `koa-mount`\n\nIf you wish to integrate with `koa-router` using `koa-mount`, you may do so by combining them to mount a specific prefix for oauth operations:\n\n```js\nvar Router = require(\'koa-router\');\nvar bodyparser = require(\'koa-bodyparser\');\nvar koa = require(\'koa\');\nvar model = require(\'koa-oauth-server/node_modules/oauth2-server/examples/memory/model\');\nvar mount = require(\'koa-mount\');\nvar oauthserver = require(\'koa-oauth-server\');\n\n// Create a new koa app.\nvar app = koa();\n\n// Create a router for oauth.\nvar router = new Router();\n\n// Enable body parsing.\napp.use(bodyparser());\n\n// See https://github.com/thomseddon/node-oauth2-server for specification.\napp.oauth = oauthserver({\n  model: model,\n  grants: [\'password\'],\n  debug: true\n});\n\n// Mount `oauth2` route prefix.\napp.use(mount(\'/oauth2\', router.middleware()));\n\n// Register `/token` POST path on oauth router (i.e. `/oauth2/token`).\nrouter.post(\'/token\', app.oauth.grant());\n\n// Start koa server.\napp.listen(3000);\n```\n\nThen attempt to be granted a new oauth token:\n\n```sh\ncurl -XPOST -d \'username=thomseddon&password=nightworld&grant_type=password&client_id=thom&client_secret=nightworld\' http://localhost:3000/oauth2/token\n```\n',
21 silly publish   readmeFilename: 'Readme.md',
21 silly publish   gitHead: '503878a650f5f844b07ec4017bc013edda7a7f9a',
21 silly publish   bugs: { url: 'https://github.com/thomseddon/koa-oauth-server/issues' },
21 silly publish   homepage: 'https://github.com/thomseddon/koa-oauth-server#readme',
21 silly publish   _id: 'koa-oauth-server@2.0.0',
21 silly publish   _shasum: '33889a1fa0797cede566f9baa0f4a12bb46aaca5',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name koa-oauth-server
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'koa-oauth-server',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'koa-oauth-server',
26 silly mapToRegistry   name: 'koa-oauth-server',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/koa-oauth-server
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /Users/Phil/.npm/koa-oauth-server/2.0.0/package.tgz
30 verbose request uri https://registry.npmjs.org/koa-oauth-server
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 6:21:59 PM
33 verbose request using bearer token for auth
34 verbose request id 2b90899da15096be
35 http request PUT https://registry.npmjs.org/koa-oauth-server
36 http 403 https://registry.npmjs.org/koa-oauth-server
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '110',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Tue, 01 Nov 2016 22:21:59 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-ord1743-ORD',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1478038919.431926,VS0,VE340',
37 verbose headers   vary: 'Accept-Encoding' }
38 verbose request invalidating /Users/Phil/.npm/registry.npmjs.org/koa-oauth-server on PUT
39 error publish Failed PUT 403
40 verbose stack Error: you do not have permission to publish "koa-oauth-server". Are you logged in as the correct user? : koa-oauth-server
40 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
40 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
40 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:200:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1067:10)
40 verbose stack     at emitOne (events.js:101:20)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:988:12)
41 verbose statusCode 403
42 verbose pkgid koa-oauth-server
43 verbose cwd /Users/Phil/Projects/koa-oauth-server
44 error Darwin 15.5.0
45 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
46 error node v6.5.0
47 error npm  v3.10.3
48 error code E403
49 error you do not have permission to publish "koa-oauth-server". Are you logged in as the correct user? : koa-oauth-server
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
